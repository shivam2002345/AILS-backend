"use strict";
/*
 * Copyright (c) 2018 by Filestack.
 * Some rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.transform = exports.EVideoAccessMode = exports.EVideoAccess = exports.EVideoLocations = exports.EUrlscreenshotOrientation = exports.EUrlscreenshotMode = exports.EUrlscreenshotAgent = exports.EVideoTypes = exports.EAudioTypes = exports.EImageWatermarkPosition = exports.ESmartCropMode = exports.ECropfacesType = exports.EColorspaceType = exports.EStyleType = exports.ENoiseType = exports.EShapeType = exports.EBlurMode = exports.EFitOptions = exports.EAlignFacesOptions = exports.EAlignOptions = void 0;
var filelink_1 = require("./../filelink");
/**
 * @private
 */
var toSnakeCase = function (original) {
    var snakeCased = {};
    var keys = Object.keys(original);
    for (var i = 0; i < keys.length; i++) {
        var newKey = keys[i].split(/(?=[A-Z])/).join('_').toLowerCase();
        if (typeof original[keys[i]] === 'object' && !Array.isArray(original[keys[i]])) {
            snakeCased[newKey] = toSnakeCase(original[keys[i]]);
        }
        else {
            snakeCased[newKey] = original[keys[i]];
        }
    }
    return snakeCased;
};
/**
 * Align enum
 */
var EAlignOptions;
(function (EAlignOptions) {
    EAlignOptions["left"] = "left";
    EAlignOptions["right"] = "right";
    EAlignOptions["center"] = "center";
    EAlignOptions["bottom"] = "bottom";
    EAlignOptions["top"] = "top";
})(EAlignOptions = exports.EAlignOptions || (exports.EAlignOptions = {}));
/**
 * Align enum with faces option
 */
var EAlignFacesOptions;
(function (EAlignFacesOptions) {
    EAlignFacesOptions["left"] = "left";
    EAlignFacesOptions["right"] = "right";
    EAlignFacesOptions["center"] = "center";
    EAlignFacesOptions["bottom"] = "bottom";
    EAlignFacesOptions["top"] = "top";
    EAlignFacesOptions["faces"] = "faces";
})(EAlignFacesOptions = exports.EAlignFacesOptions || (exports.EAlignFacesOptions = {}));
/**
 * Fit enum
 */
var EFitOptions;
(function (EFitOptions) {
    EFitOptions["clip"] = "clip";
    EFitOptions["crop"] = "crop";
    EFitOptions["scale"] = "scale";
    EFitOptions["max"] = "max";
})(EFitOptions = exports.EFitOptions || (exports.EFitOptions = {}));
/**
 * Blur enum
 */
var EBlurMode;
(function (EBlurMode) {
    EBlurMode["linear"] = "linear";
    EBlurMode["gaussian"] = "gaussian";
})(EBlurMode = exports.EBlurMode || (exports.EBlurMode = {}));
/**
 * Shapes enum
 */
var EShapeType;
(function (EShapeType) {
    EShapeType["oval"] = "oval";
    EShapeType["rect"] = "rect";
})(EShapeType = exports.EShapeType || (exports.EShapeType = {}));
/**
 * Noise type enum
 */
var ENoiseType;
(function (ENoiseType) {
    ENoiseType["none"] = "none";
    ENoiseType["low"] = "low";
    ENoiseType["medium"] = "medium";
    ENoiseType["high"] = "high";
})(ENoiseType = exports.ENoiseType || (exports.ENoiseType = {}));
/**
 * Style type enum
 */
var EStyleType;
(function (EStyleType) {
    EStyleType["artwork"] = "artwork";
    EStyleType["photo"] = "photo";
})(EStyleType = exports.EStyleType || (exports.EStyleType = {}));
/**
 * Color space enum
 */
var EColorspaceType;
(function (EColorspaceType) {
    EColorspaceType["RGB"] = "RGB";
    EColorspaceType["CMYK"] = "CMYK";
    EColorspaceType["Input"] = "Input";
})(EColorspaceType = exports.EColorspaceType || (exports.EColorspaceType = {}));
/**
 * Crop faces options enum
 */
var ECropfacesType;
(function (ECropfacesType) {
    ECropfacesType["thumb"] = "thumb";
    ECropfacesType["crop"] = "crop";
    ECropfacesType["fill"] = "fill";
})(ECropfacesType = exports.ECropfacesType || (exports.ECropfacesType = {}));
/**
 * SmartCrop mode options enum
 */
var ESmartCropMode;
(function (ESmartCropMode) {
    ESmartCropMode["fit"] = "fit";
    ESmartCropMode["auto"] = "auto";
})(ESmartCropMode = exports.ESmartCropMode || (exports.ESmartCropMode = {}));
var EImageWatermarkPosition;
(function (EImageWatermarkPosition) {
    EImageWatermarkPosition["top"] = "top";
    EImageWatermarkPosition["middle"] = "middle";
    EImageWatermarkPosition["bottom"] = "bottom";
    EImageWatermarkPosition["left"] = "left";
    EImageWatermarkPosition["center"] = "center";
    EImageWatermarkPosition["right"] = "right";
})(EImageWatermarkPosition = exports.EImageWatermarkPosition || (exports.EImageWatermarkPosition = {}));
/**
 * Convert to format
 */
var EAudioTypes;
(function (EAudioTypes) {
    EAudioTypes["libmp3lame"] = "libmp3lame";
    EAudioTypes["libvorbis"] = "libvorbis";
    EAudioTypes["libfdk_aac"] = "libfdk_aac";
    EAudioTypes["dib_ac3"] = "dib_ac3";
    EAudioTypes["pcm_s16le"] = "pcm_s16le";
    EAudioTypes["mp2"] = "mp2";
    EAudioTypes["ac3"] = "ac3";
    EAudioTypes["eac3"] = "eac3";
})(EAudioTypes = exports.EAudioTypes || (exports.EAudioTypes = {}));
/**
 * Convert to format
 */
var EVideoTypes;
(function (EVideoTypes) {
    EVideoTypes["h264"] = "h264";
    EVideoTypes["h264_hi"] = "h264.hi";
    EVideoTypes["webm"] = "webm";
    EVideoTypes["webm-hi"] = "webm.hi";
    EVideoTypes["ogg"] = "ogg";
    EVideoTypes["ogg-hi"] = "ogg.hi";
    EVideoTypes["hls-variant"] = "hls.variant";
    EVideoTypes["mp3"] = "mp3";
    EVideoTypes["oga"] = "oga";
    EVideoTypes["m4a"] = "m4a";
    EVideoTypes["aac"] = "aac";
    EVideoTypes["hls"] = "hls.variant.audio";
})(EVideoTypes = exports.EVideoTypes || (exports.EVideoTypes = {}));
var EUrlscreenshotAgent;
(function (EUrlscreenshotAgent) {
    EUrlscreenshotAgent["desktop"] = "desktop";
    EUrlscreenshotAgent["mobile"] = "mobile";
})(EUrlscreenshotAgent = exports.EUrlscreenshotAgent || (exports.EUrlscreenshotAgent = {}));
var EUrlscreenshotMode;
(function (EUrlscreenshotMode) {
    EUrlscreenshotMode["all"] = "all";
    EUrlscreenshotMode["window"] = "window";
})(EUrlscreenshotMode = exports.EUrlscreenshotMode || (exports.EUrlscreenshotMode = {}));
var EUrlscreenshotOrientation;
(function (EUrlscreenshotOrientation) {
    EUrlscreenshotOrientation["portrait"] = "portrait";
    EUrlscreenshotOrientation["landscape"] = "landscape";
})(EUrlscreenshotOrientation = exports.EUrlscreenshotOrientation || (exports.EUrlscreenshotOrientation = {}));
/**
 * Video storage location
 */
var EVideoLocations;
(function (EVideoLocations) {
    EVideoLocations["s3"] = "s3";
    EVideoLocations["azure"] = "azure";
    EVideoLocations["gcs"] = "gcs";
    EVideoLocations["rackspace"] = "rackspace";
    EVideoLocations["dropbox"] = "dropbox";
})(EVideoLocations = exports.EVideoLocations || (exports.EVideoLocations = {}));
var EVideoAccess;
(function (EVideoAccess) {
    EVideoAccess["private"] = "private";
    EVideoAccess["public"] = "public";
})(EVideoAccess = exports.EVideoAccess || (exports.EVideoAccess = {}));
var EVideoAccessMode;
(function (EVideoAccessMode) {
    EVideoAccessMode["preserve"] = "preserve";
    EVideoAccessMode["constrain"] = "constrain";
    EVideoAccessMode["letterbox"] = "letterbox";
    EVideoAccessMode["pad"] = "pad";
    EVideoAccessMode["crop"] = "crop";
})(EVideoAccessMode = exports.EVideoAccessMode || (exports.EVideoAccessMode = {}));
/**
 * Creates filestack transform url.
 * Transform params can be provided in camelCase or snakeCase style
 *
 * @example
 * ```js
 * // camelCase
 * console.log(transform(session, {
 *    partialPixelate: {
 *      objects: [[10, 20, 200, 250], [275, 91, 500, 557]],
 *    },
 *  }, 'testfile'));
 * ```
 * result => https://cdn.filestackcontent.com/partial_pixelate=objects:[[10,20,200,250],[275,91,500,557]]/testfile
 *
 * ```js
 * // snake_case
 * console.log(transform(session, {
 *    partial_pixelate: {
 *      objects: [[10, 20, 200, 250], [275, 91, 500, 557]],
 *    },
 *  }, 'testfile'));
 * ```
 * result => https://cdn.filestackcontent.com/partial_pixelate=objects:[[10,20,200,250],[275,91,500,557]]/testfile
 *
 * Client.transform is deprecated. Use Filelink class instead
 *
 * @private
 * @throws Error
 * @param options Transformation options
 * @param url url, handle or array of elements
 */
var transform = function (session, url, options, b64) {
    if (options === void 0) { options = {}; }
    if (b64 === void 0) { b64 = false; }
    options = toSnakeCase(options);
    if (session.policy && session.signature) {
        options.security = {
            policy: session.policy,
            signature: session.signature,
        };
    }
    var filelink = new filelink_1.Filelink(url, session.apikey);
    filelink.setCname(session.cname);
    filelink.setBase64(b64);
    Object.keys(options).forEach(function (key) {
        if (typeof options[key] === 'boolean' && !options[key] && key !== 'cache') {
            return;
        }
        filelink.addTask(key, options[key]);
    });
    return filelink.toString();
};
exports.transform = transform;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
