"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StoreParamsSchema = void 0;
/*
 * Copyright (c) 2018 by Filestack.
 * Some rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
exports.StoreParamsSchema = {
    '$schema': 'http://json-schema.org/draft-07/schema#',
    title: 'Filestack Store',
    description: 'Filestack Store Options',
    type: 'object',
    additionalProperties: false,
    properties: {
        filename: {
            oneOf: [{
                    type: 'string',
                }, {
                    format: 'callback',
                }],
        },
        location: {
            '$ref': 'locationsDef',
        },
        path: {
            type: 'string',
        },
        container: {
            type: 'string',
        },
        region: {
            '$ref': 'regionsDef',
        },
        access: {
            type: 'string',
            enum: ['public', 'private'],
            default: 'private',
        },
        base64decode: {
            type: 'boolean',
        },
        workflows: {
            '$ref': 'workflowsDef',
        },
        disableStorageKey: {
            type: 'boolean',
        },
        tags: {
            type: 'object',
            additionalProperties: {
                type: 'string',
            },
        },
        sanitizer: {
            oneOf: [{
                    type: 'boolean',
                }, {
                    type: 'object',
                    additionalProperties: false,
                    properties: {
                        exclude: {
                            type: 'array',
                            items: [{
                                    type: 'string',
                                }],
                        },
                        replacement: {
                            type: 'string',
                        },
                    },
                }],
        },
    },
};

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY2hlbWEvc3RvcmUuc2NoZW1hLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNVLFFBQUEsaUJBQWlCLEdBQUc7SUFDL0IsU0FBUyxFQUFFLHlDQUF5QztJQUNwRCxLQUFLLEVBQUUsaUJBQWlCO0lBQ3hCLFdBQVcsRUFBRSx5QkFBeUI7SUFDdEMsSUFBSSxFQUFFLFFBQVE7SUFDZCxvQkFBb0IsRUFBRSxLQUFLO0lBQzNCLFVBQVUsRUFBRTtRQUNWLFFBQVEsRUFBRTtZQUNSLEtBQUssRUFBRSxDQUFDO29CQUNOLElBQUksRUFBRSxRQUFRO2lCQUNmLEVBQUU7b0JBQ0QsTUFBTSxFQUFFLFVBQVU7aUJBQ25CLENBQUM7U0FDSDtRQUNELFFBQVEsRUFBRTtZQUNSLE1BQU0sRUFBRSxjQUFjO1NBQ3ZCO1FBQ0QsSUFBSSxFQUFFO1lBQ0osSUFBSSxFQUFFLFFBQVE7U0FDZjtRQUNELFNBQVMsRUFBRTtZQUNULElBQUksRUFBRSxRQUFRO1NBQ2Y7UUFDRCxNQUFNLEVBQUU7WUFDTixNQUFNLEVBQUUsWUFBWTtTQUNyQjtRQUNELE1BQU0sRUFBRTtZQUNOLElBQUksRUFBRSxRQUFRO1lBQ2QsSUFBSSxFQUFFLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQztZQUMzQixPQUFPLEVBQUUsU0FBUztTQUNuQjtRQUNELFlBQVksRUFBRTtZQUNaLElBQUksRUFBRSxTQUFTO1NBQ2hCO1FBQ0QsU0FBUyxFQUFFO1lBQ1QsTUFBTSxFQUFFLGNBQWM7U0FDdkI7UUFDRCxpQkFBaUIsRUFBRTtZQUNqQixJQUFJLEVBQUUsU0FBUztTQUNoQjtRQUNELElBQUksRUFBRTtZQUNKLElBQUksRUFBRSxRQUFRO1lBQ2Qsb0JBQW9CLEVBQUU7Z0JBQ3BCLElBQUksRUFBRSxRQUFRO2FBQ2Y7U0FDRjtRQUNELFNBQVMsRUFBRTtZQUNULEtBQUssRUFBRSxDQUFDO29CQUNOLElBQUksRUFBRSxTQUFTO2lCQUNoQixFQUFFO29CQUNELElBQUksRUFBRSxRQUFRO29CQUNkLG9CQUFvQixFQUFFLEtBQUs7b0JBQzNCLFVBQVUsRUFBRTt3QkFDVixPQUFPLEVBQUU7NEJBQ1AsSUFBSSxFQUFFLE9BQU87NEJBQ2IsS0FBSyxFQUFFLENBQUM7b0NBQ04sSUFBSSxFQUFFLFFBQVE7aUNBQ2YsQ0FBQzt5QkFDSDt3QkFDRCxXQUFXLEVBQUU7NEJBQ1gsSUFBSSxFQUFFLFFBQVE7eUJBQ2Y7cUJBQ0Y7aUJBQ0YsQ0FBQztTQUNIO0tBQ0Y7Q0FDRixDQUFDIiwiZmlsZSI6InNjaGVtYS9zdG9yZS5zY2hlbWEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IChjKSAyMDE4IGJ5IEZpbGVzdGFjay5cbiAqIFNvbWUgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0IGNvbnN0IFN0b3JlUGFyYW1zU2NoZW1hID0ge1xuICAnJHNjaGVtYSc6ICdodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA3L3NjaGVtYSMnLFxuICB0aXRsZTogJ0ZpbGVzdGFjayBTdG9yZScsXG4gIGRlc2NyaXB0aW9uOiAnRmlsZXN0YWNrIFN0b3JlIE9wdGlvbnMnLFxuICB0eXBlOiAnb2JqZWN0JyxcbiAgYWRkaXRpb25hbFByb3BlcnRpZXM6IGZhbHNlLFxuICBwcm9wZXJ0aWVzOiB7XG4gICAgZmlsZW5hbWU6IHtcbiAgICAgIG9uZU9mOiBbe1xuICAgICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICAgIH0sIHtcbiAgICAgICAgZm9ybWF0OiAnY2FsbGJhY2snLFxuICAgICAgfV0sXG4gICAgfSxcbiAgICBsb2NhdGlvbjoge1xuICAgICAgJyRyZWYnOiAnbG9jYXRpb25zRGVmJyxcbiAgICB9LFxuICAgIHBhdGg6IHtcbiAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgIH0sXG4gICAgY29udGFpbmVyOiB7XG4gICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICB9LFxuICAgIHJlZ2lvbjoge1xuICAgICAgJyRyZWYnOiAncmVnaW9uc0RlZicsXG4gICAgfSxcbiAgICBhY2Nlc3M6IHtcbiAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgZW51bTogWydwdWJsaWMnLCAncHJpdmF0ZSddLFxuICAgICAgZGVmYXVsdDogJ3ByaXZhdGUnLFxuICAgIH0sXG4gICAgYmFzZTY0ZGVjb2RlOiB7XG4gICAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgfSxcbiAgICB3b3JrZmxvd3M6IHtcbiAgICAgICckcmVmJzogJ3dvcmtmbG93c0RlZicsXG4gICAgfSxcbiAgICBkaXNhYmxlU3RvcmFnZUtleToge1xuICAgICAgdHlwZTogJ2Jvb2xlYW4nLFxuICAgIH0sXG4gICAgdGFnczoge1xuICAgICAgdHlwZTogJ29iamVjdCcsXG4gICAgICBhZGRpdGlvbmFsUHJvcGVydGllczoge1xuICAgICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBzYW5pdGl6ZXI6IHtcbiAgICAgIG9uZU9mOiBbe1xuICAgICAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgICB9LCB7XG4gICAgICAgIHR5cGU6ICdvYmplY3QnLFxuICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczogZmFsc2UsXG4gICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICBleGNsdWRlOiB7XG4gICAgICAgICAgICB0eXBlOiAnYXJyYXknLFxuICAgICAgICAgICAgaXRlbXM6IFt7XG4gICAgICAgICAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgICAgICAgfV0sXG4gICAgICAgICAgfSxcbiAgICAgICAgICByZXBsYWNlbWVudDoge1xuICAgICAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH1dLFxuICAgIH0sXG4gIH0sXG59O1xuIl19
